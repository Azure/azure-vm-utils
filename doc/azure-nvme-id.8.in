.TH "azure-nvme-id" "8" "August\ 08,\ 2025" "azure-nvme-id @VERSION@" "User Manual"
.hy
.SH NAME
.PP
azure-nvme-id - identify Azure NVMe devices
.SH SYNOPSIS
.PP
\f[B]azure-nvme-id\f[R] [--debug] [--format {plain|json}] [--help |
--version | --udev]
.SH DESCRIPTION
.PP
\f[B]azure-nvme-id\f[R] provides identification metadata in the response
to Identify Namespace command for some models of NVMe devices.
This is found in vendor-specific (vs) field which contains various
identification details with a comma-separated, key=value format.
.PP
\f[B]azure-nvme-id\f[R] combines this metadata with the make and model
of NVMe device namespaces to identify a device by type, name, index,
etc.
Output options are plain or json.
.PP
To suppoort udev rules, --udev option will invoke
\f[B]azure-nvme-id\f[R] in udev mode.
.SH OPTIONS
.TP
\f[CB]--debug\f[R]
Debug mode with additional logging.
.TP
\f[CB]--format {plain|json}\f[R]
Output format, default is plain.
.TP
\f[CB]--help\f[R]
Show usage information and exit.
.TP
\f[CB]--udev\f[R]
Run in udev mode, printing a set of \f[CB]<key>=<value>\f[R] variables
consumed by udev rules.
Requires DEVNAME to be set in environment.
.TP
\f[CB]--version\f[R]
Show version information and exit.
.SH EXAMPLES
.PP
Identify NVMe namespaces:
.IP
.nf
\f[CR]
$ sudo azure-nvme-id
/dev/nvme0n1:
/dev/nvme1n1: type=local,index=1,name=nvme-110G-1
\f[R]
.fi
.PP
Parse device identifiers for udev consumption:
.IP
.nf
\f[CR]
$ sudo env DEVNAME=/dev/nvme1n1 azure-nvme-id --udev
AZURE_DISK_VS=type=local,index=1,name=nvme-110G-1
AZURE_DISK_TYPE=local
AZURE_DISK_INDEX=1
AZURE_DISK_NAME=nvme-110G-1
\f[R]
.fi
.PP
Check \f[CB]azure-nvme-id\f[R] version:
.IP
.nf
\f[CR]
$ azure-nvme-id --version
azure-nvme-id 0.1.2
\f[R]
.fi
.SH SEE ALSO
.PP
Source and documentation available at:
<https://github.com/Azure/azure-vm-utils>
